syntax = "proto3";

package proto;

import "cmd/cmd_social.proto";
import "define.proto";
import "server_only/bin.home.proto";
import "server_only/bin_common.server.proto";

option go_package = "./;proto";

enum PlayerStatusType {
    PLAYER_STATUS_OFFLINE = 0;
    PLAYER_STATUS_ONLINE = 1;
}

enum HomeStatusType {
    HOME_STATUS_OFFLINE = 0;
    HOME_STATUS_ONLINE = 1;
}

enum CustomDungeonRecommendType {
    CUSTOM_DUNGEON_RECOMMEND_NONE = 0;
    CUSTOM_DUNGEON_RECOMMEND_NEW = 1;
    CUSTOM_DUNGEON_RECOMMEND_OLD = 2;
}

enum UgcRedisDataType {
    UGC_REDIS_DATA_TYPE_NONE = 0;
    UGC_REDIS_DATA_TYPE_MINE = 1;
    UGC_REDIS_DATA_TYPE_PUBLISH = 2;
}

message PlayerStatusRedisData {
    PlayerStatusType status = 1;
    uint32 gameserver_id = 2;
    uint64 login_rand = 3;
    uint32 login_time = 4;
}

message MailRedisData {
    MailBin mail_bin = 1;
    uint32 id = 2;
    bool is_read = 3;
    bool is_attachment_got = 4;
}

message MailMaxIdRedisData {
}

message MailIdSortedSetRedisData {
}

message MailTicketHashMapRedisData {
}

message MailTransactionIdHashMapRedisData {
}

message MailTicketMailIdHashMapRedisData {
}

message TicketTimeBin {
    uint32 enque_time = 1;
    string ticket = 2;
}

message OfflineMsgRedisData {
    uint32 last_index = 1;
    repeated OfflineMsgBin offline_msg_list = 2;
    repeated TicketTimeBin recent_ticket_list = 3;
}

message HomeOfflineMsgRedisData {
    uint32 last_index = 1;
    repeated HomeOfflineMsgBin offline_msg_list = 2;
    repeated TicketTimeBin recent_ticket_list = 3;
}

message PlayerFriendListRedisData {
}

message PlayerPSNFriendListRedisData {
}

message PlayerAskFriendListRedisData {
}

message PlayerBlacklistRedisData {
}

message PlayerPSNBlacklistRedisData {
}

message PlayerMpBriefData {
    bool is_mp_avaliable = 1;
    bool is_only_mp_with_ps_player = 2;
}

message PlayerSocialBriefData {
    Birthday birthday = 1;
    string signature = 2;
    uint32 name_card_id = 3;
    uint32 finish_achievement_num = 4;
    uint32 tower_floor_index = 5;
    uint32 tower_level_index = 6;
    repeated SocialShowAvatarInfo show_avatar_info_list = 7;
    bool is_show_avatar = 8;
    repeated uint32 show_name_card_id_list = 9;
    string ip_code = 10;
}

message PlayerBasicBriefData {
    string nickname = 1;
    uint32 level = 2;
    uint32 world_level = 3;
    uint32 last_login_time = 4;
    uint32 head_image_avatar_id = 5;
    uint32 exp = 6;
    uint32 hcoin = 7;
    uint32 scoin = 8;
    uint32 platform_type = 9;
    string online_id = 10;
    uint32 mcoin = 11;
    string psn_id = 12;
    uint32 profile_picture_costume_id = 13;
    LanguageType client_language_type = 14;
    fixed32 register_time = 15;
    uint32 gender_type = 16;
}

message PlayerHomeAuditModuleData {
    uint32 module_id = 1;
    map<uint32, uint32> audit_scene_version_map = 2;
}

message PlayerHomeBriefData {
    FriendEnterHomeOption friend_enter_home_option = 1;
    bool is_home_available = 2;
    fixed32 last_save_time = 3;
    uint32 prior_check_time = 4;
    repeated PlayerHomeAuditModuleData audit_module_list = 5;
}

message PlayerBriefDataRedisData {
    PlayerSocialBriefData social_brief = 1;
    PlayerBasicBriefData basic_brief = 2;
    PlayerMpBriefData mp_brief = 3;
    PlayerHomeBriefData home_brief = 4;
}

message PlayerShowAvatarRedisData {
    ShowAvatarInfo show_avatar_info = 1;
}

message PlayerPrivateChatRedisData {
}

message PlayerRecentChatRedisData {
}

message PlayerPrivateChatUnreadRedisData {
}

message ChatRedisData {
    enum SystemHintType {
        CHAT_NONE = 0;
        CHAT_ENTER_WORLD = 1;
        CHAT_LEAVE_WORLD = 2;
    }

    message SystemHint {
        uint32 type = 1;
    }

    uint32 time = 1;
    uint32 uid = 2;
    uint32 sequence = 3;
    uint32 to_uid = 4;
    bool is_read = 5;
    oneof content {
        string text = 100;
        uint32 icon = 101;
        SystemHint system_hint = 102;
    }
}

message ChatMixRedisData {
    enum SystemHintType {
        CHAT_NONE = 0;
        CHAT_ENTER_WORLD = 1;
        CHAT_LEAVE_WORLD = 2;
    }

    message SystemHint {
        uint32 type = 14;
    }

    uint32 time = 13;
    uint32 sequence = 10;
    uint32 to_uid = 7;
    uint32 uid = 15;
    bool is_read = 5;
    oneof content {
        string text = 1946;
        uint32 icon = 914;
        SystemHint system_hint = 1753;
    }
}

message BlessingSocialData {
    map<uint32, uint32> pic_num_map = 1;
}

message PlantFlowerSocialData {
    map<uint32, uint32> have_flower_num_map = 1;
    map<uint32, uint32> wish_flower_num_map = 2;
}

message WinterCampSocialData {
    repeated ItemParamBin have_item_bin_list = 1;
    repeated uint32 wish_item_id_list = 2;
}

message ActivityGiveSocialData {
    map<uint32, uint32> have_gift_num_map = 1;
    map<uint32, uint32> wish_gift_num_map = 2;
}

message ActivitySocialData {
    uint32 schedule_id = 1;
    ActivityGiveSocialData activity_give_social_data = 5;
    oneof data {
        BlessingSocialData blessing_data = 2;
        PlantFlowerSocialData plant_flower_data = 3;
        WinterCampSocialData winter_camp_data = 4;
    }
}

message PlayerActivitySocialRedisData {
    map<uint32, ActivitySocialData> activity_social_data_map = 1;
}

message HomeStatusRedisData {
    HomeStatusType status = 1;
    uint32 gameserver_id = 2;
    uint64 load_rand = 3;
}

message HomeBriefDataRedisData {
    int32 furniture_manufacturing_max_finish_time = 1;
}

message OfflineOpGIndexRedisData {
}

message OfflineOpSortedSetRedisData {
}

message OfflineOpRedisData {
    uint32 index = 1;
    fixed32 time = 2;
    OfflineOpType op_type = 3;
    OfflineOpBin op_bin = 4;
}

message CustomDungeonBlockRedisData {
    uint32 guid = 1;
    uint32 block_id = 2;
    Vector3Int pos = 3;
    Vector3Int rot = 4;
}

message CustomDungeonRoomRedisData {
    uint32 room_id = 1;
    repeated CustomDungeonBlockRedisData block_list = 2;
}

message CustomDungeonContent {
    repeated CustomDungeonRoomRedisData room_list = 1;
    CustomDungeonSettingBin setting = 2;
}

message CustomDungeonRedisData {
    uint64 dungeon_guid = 1;
    uint32 dungeon_id = 2;
    CustomDungeonContent edit_content = 3;
    CustomDungeonContent publish_content = 4;
    uint32 first_publish_time = 5;
    bool is_no_change_after_publish = 6;
    uint32 version = 7;
}

message CustomDungeonSocialRedisData {
    uint32 play_num = 1;
    uint32 like_num = 2;
    uint32 store_num = 3;
    uint32 win_num = 4;
}

message CustomDungeonBriefRedisData {
    uint64 dungeon_guid = 1;
    uint32 dungeon_id = 2;
    CustomDungeonSettingBin setting = 3;
    CustomDungeonAbstractBin abstract = 4;
    CustomDungeonSocialRedisData social = 5;
    bool is_need_recommend = 6;
    string creator_nickname = 7;
    uint32 recommend_type = 8;
    repeated uint32 tag_list = 9;
    float recommend_score = 10;
    bool is_psn_platform = 11;
}

message CustomDungeonNewRecommendRedisData {
}

message CustomDungeonOldRecommendRedisData {
}

message CustomDungeonLikeRedisData {
}

message UgcMusicNoteRedisData {
    uint32 start_time = 1;
    uint32 end_time = 2;
}

message UgcMusicTrackRedisData {
    repeated UgcMusicNoteRedisData music_note_list = 1;
}

message UgcMusicContentRedisData {
    uint32 music_id = 1;
    repeated UgcMusicTrackRedisData music_track_list = 2;
}

message UgcRedisData {
    uint64 ugc_guid = 1;
    uint32 save_time = 2;
    oneof content {
        UgcMusicContentRedisData music_content = 11;
    }
}

message UgcEditRedisData {
}

message UgcPublishRedisData {
}

message UgcMusicBriedRedisData {
    uint32 music_id = 1;
    uint32 note_count = 2;
    uint32 max_score = 3;
    uint64 import_from_ugc_guid = 4;
}

message UgcBriefRedisData {
    uint64 ugc_guid = 1;
    string creator_nickname = 2;
    uint32 publish_time = 3;
    uint32 version = 4;
    bool is_psn_platform = 5;
    oneof brief {
        UgcMusicBriedRedisData music_brief = 11;
    }
}

message HomeBlueprintBriefRedisData {
    string share_code = 1;
    uint32 owner_uid = 2;
    uint32 module_id = 3;
    uint32 scene_id = 4;
    uint32 block_id = 5;
    bool is_allow_copy = 6;
    uint32 create_time = 7;
}

message HomeBlueprintDetailRedisData {
    string share_code = 1;
    HomeSceneBin scene_bin = 2;
}

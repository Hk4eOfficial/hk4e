syntax = "proto3";

package proto;

import "cmd/cmd_gcg.proto";
import "cmd/cmd_gcg_common.proto";
import "define.proto";
import "server_only/cmd_match.server.proto";

option go_package = "./;proto";

enum GCGStatisticSpecifyItemType {
    SPECIFY_INIT = 0;
    DIE_CHARACTER_NUM = 1;
    ALIVE_CHARACTER_HP_SUM = 2;
    BEING_DAMAGE_SUM = 3;
    BEING_HEAL_SUM = 4;
    SHIELD_REDUCE_SUM = 5;
    REST_ENERGY = 6;
    REST_THINK_REST_VIRTUAL_DICE_SUM = 7;
    REST_DISCARD_INTENTION_SUM = 8;
    REST_DISCARD_INTENTION_DAMAGE_SUM = 9;
    ELEMENT_REACTION_TIMES = 10;
    ONE_HIT_DAMAGE_VEC = 11;
    PLAY_CARD_TIMES = 12;
    SUMMON_TIMES = 13;
    SKILL_TAG_Q_TIMES = 14;
    ONE_OPERATION_KILL_COUNT_VEC = 15;
    CHARACTER_DIE_TIMES = 16;
    BEING_DAMAGE_OVERFLOW_SUM = 17;
}

enum GCGStatisticCommonItemType {
    COMMON_INIT = 0;
    CONTROLLER_A_WIN = 1;
    ROUND_NUM = 2;
    WINNER_REST_DICE = 3;
    PHASE_MAIN_TIME_USE = 4;
}

message ServerGCGVerify {
    uint32 game_uid = 1;
    uint32 verify_code = 2;
    uint32 app_id = 3;
    uint32 thread_index = 4;
}

message ServerGCGOperationReq {
    enum CmdId {
        NONE = 0;
        CMD_ID = 12436;
    }

    uint32 uid = 1;
    GCGOperation op = 2;
    uint32 op_seq = 3;
}

message ServerGCGOperationRsp {
    enum CmdId {
        NONE = 0;
        CMD_ID = 12407;
    }

    int32 retcode = 1;
    uint32 op_seq = 2;
}

message ServerGCGAskDuelReq {
    enum CmdId {
        NONE = 0;
        CMD_ID = 12457;
    }

    uint32 uid = 1;
}

message ServerGCGNewGameInfoNotify {
    enum CmdId {
        NONE = 0;
        CMD_ID = 12360;
    }

    uint32 app_id = 1;
    uint32 thread_index = 2;
    GCGGameBriefData game_brief_data = 3;
    uint32 create_time = 4;
    uint32 try_create_time = 5;
}

message ServerGCGGMCommandReq {
    enum CmdId {
        NONE = 0;
        CMD_ID = 12373;
    }

    repeated string msg_list = 1;
}

message ServerGCGGMCommandRsp {
    enum CmdId {
        NONE = 0;
        CMD_ID = 12338;
    }

    int32 retcode = 1;
    string ret_msg = 2;
    string ret_extra_content = 3;
}

message ServerGCGInitFinishReq {
    enum CmdId {
        NONE = 0;
        CMD_ID = 12334;
    }

    int32 retcode = 1;
}

message ServerGCGSyncReq {
    enum CmdId {
        NONE = 0;
        CMD_ID = 12456;
    }

    uint32 game_uid = 1;
    uint32 verify_code = 2;
    bool is_login = 3;
}

message ServerGCGSyncRsp {
    enum CmdId {
        NONE = 0;
        CMD_ID = 12328;
    }

    int32 retcode = 1;
    uint32 game_uid = 2;
    uint32 verify_code = 3;
    uint32 app_id = 4;
    uint32 thread_index = 5;
    bool is_login = 6;
}

message GCGPlayerData {
    OnlinePlayerInfo player_info = 1;
    GCGDuelExtra duel_extra = 2;
}

message ServerGCGCreateSingleGameReq {
    enum CmdId {
        NONE = 0;
        CMD_ID = 12489;
    }

    uint32 game_id = 1;
    GCGGameBusinessType business_type = 2;
    GCGPlayerData player_data = 3;
    repeated uint32 custom_param_list = 4;
    uint32 try_create_time = 5;
}

message ServerGCGCreateSingleGameRsp {
    enum CmdId {
        NONE = 0;
        CMD_ID = 12308;
    }

    int32 retcode = 1;
    uint32 game_id = 2;
}

message ServerGCGGiveUpGameReq {
    enum CmdId {
        NONE = 0;
        CMD_ID = 12499;
    }

    uint32 game_uid = 1;
    uint32 game_id = 2;
    uint32 verify_code = 3;
    GCGGameBusinessType business_type = 4;
}

message ServerGCGGiveUpGameRsp {
    enum CmdId {
        NONE = 0;
        CMD_ID = 12492;
    }

    int32 retcode = 1;
    uint32 game_uid = 2;
    uint32 game_id = 3;
    uint32 verify_code = 4;
    uint32 app_id = 5;
    uint32 thread_index = 6;
}

message ServerGCGSkillPreviewAskReq {
    enum CmdId {
        NONE = 0;
        CMD_ID = 12319;
    }

    uint32 uid = 1;
}

message ServerGCGSkillPreviewAskRsp {
    enum CmdId {
        NONE = 0;
        CMD_ID = 12477;
    }

    int32 retcode = 1;
}

message ServerGCGCreateMultiGameReq {
    enum CmdId {
        NONE = 0;
        CMD_ID = 12476;
    }

    uint32 game_id = 1;
    GCGGameBusinessType business_type = 2;
    GCGPlayerData player_data_1 = 3;
    GCGPlayerData player_data_2 = 4;
    uint32 try_create_time = 5;
}

message ServerGCGCreateMultiGameRsp {
    enum CmdId {
        NONE = 0;
        CMD_ID = 12490;
    }

    int32 retcode = 1;
    uint32 game_id = 2;
}

message ServerGCGAddBothAITaskReq {
    enum CmdId {
        NONE = 0;
        CMD_ID = 12423;
    }

    uint64 task_id = 1;
    uint32 subtask_id = 2;
    uint32 game_type = 3;
    uint32 level_id = 4;
    uint32 card_group1_id = 5;
    uint32 card_group2_id = 6;
}

message ServerGCGAddBothAITaskRsp {
    enum CmdId {
        NONE = 0;
        CMD_ID = 12439;
    }

    int32 retcode = 1;
    uint32 task_id = 2;
    uint32 subtask_id = 3;
}

message GCGMatchPlayerInfo {
    MatchPlayer match_player = 1;
    GCGDuelExtra gcg_duel_extra = 2;
}

message ServerGCGCreateMatchGameNotify {
    enum CmdId {
        NONE = 0;
        CMD_ID = 12497;
    }

    uint32 match_id = 1;
    repeated GCGMatchPlayerInfo gcg_match_player_list = 2;
    uint32 try_create_time = 3;
}

message ServerGCGCreateMatchAIGameNotify {
    enum CmdId {
        NONE = 0;
        CMD_ID = 12392;
    }

    uint32 match_id = 1;
    repeated GCGMatchPlayerInfo gcg_match_player_list = 2;
    OnlinePlayerInfo ai_info = 3;
    uint32 try_create_time = 4;
}

message ServerGCGMatchFinishNotify {
    enum CmdId {
        NONE = 0;
        CMD_ID = 12329;
    }
}

message ServerGCGBackToDuelReq {
    enum CmdId {
        NONE = 0;
        CMD_ID = 12455;
    }

    uint32 game_uid = 1;
    uint32 verify_code = 2;
    uint32 client_data_version = 3;
}

message ServerGCGBackToDuelRsp {
    enum CmdId {
        NONE = 0;
        CMD_ID = 12309;
    }

    int32 retcode = 1;
    uint32 game_uid = 2;
    uint32 verify_code = 3;
    uint32 app_id = 4;
    uint32 thread_index = 5;
    uint32 client_data_version = 6;
}

message ServerGCGMessagePackNotify {
    enum CmdId {
        NONE = 0;
        CMD_ID = 12463;
    }

    ServerGCGVerify verify = 1;
    uint32 server_seq = 2;
    repeated GCGMessagePack msg_pack_list = 3;
}

message ServerGCGHeartBeatNotify {
    enum CmdId {
        NONE = 0;
        CMD_ID = 12405;
    }

    ServerGCGVerify verify = 1;
    uint32 server_seq = 2;
}

message ServerGCGSkillPreviewNotify {
    enum CmdId {
        NONE = 0;
        CMD_ID = 12414;
    }

    ServerGCGVerify verify = 1;
    uint32 controller_id = 2;
    uint32 onstage_card_guid = 3;
    repeated GCGSkillPreviewInfo skill_preview_list = 4;
    repeated GCGChangeOnstageInfo change_onstage_preview_list = 5;
    repeated GCGSkillPreviewPlayCardInfo play_card_list = 6;
}

message ServerGCGChallengeUpdateNotify {
    enum CmdId {
        NONE = 0;
        CMD_ID = 12332;
    }

    ServerGCGVerify verify = 1;
    uint32 server_seq = 2;
    GCGDuelChallenge challenge = 3;
}

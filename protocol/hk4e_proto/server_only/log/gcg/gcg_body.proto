syntax = "proto3";

package proto_log;

enum GCGOperationType {
    GCG_OPERATION_TYPE_NONE = 0;
    GCG_OPERATION_TYPE_DRAW = 1;
    GCG_OPERATION_TYPE_REDRAW = 2;
    GCG_OPERATION_TYPE_SELECT_ON_STAGE = 3;
    GCG_OPERATION_TYPE_ROLL = 4;
    GCG_OPERATION_TYPE_PLAY_CARD = 5;
    GCG_OPERATION_TYPE_ATTACK = 6;
    GCG_OPERATION_TYPE_REBOOT = 7;
    GCG_OPERATION_TYPE_PASS = 8;
    GCG_OPERATION_TYPE_REACTION = 9;
}

message GCGLogBodyDuelStart {
    uint32 type = 1;
    uint32 level_id = 2;
}

message GCGUseTime {
    uint32 round = 1;
    uint32 use_time = 2;
}

message GCGControllerInfo {
    uint32 uid = 1;
    uint32 controller_id = 2;
    uint32 level = 3;
    uint32 mmr = 4;
}

message GCGControllerDeckInfo {
    uint32 controller_id = 1;
    repeated uint32 card_id_list = 2;
}

message GCGCharacterInfo {
    uint32 card_id = 1;
    uint32 hp = 2;
}

message GCGControllerCharactersInfo {
    uint32 controller_id = 1;
    repeated GCGCharacterInfo character_info_list = 2;
}

message GCGOperationData {
    uint32 operation_type = 1;
    uint32 controller_id = 2;
    uint32 round = 3;
    uint32 param1 = 4;
    repeated uint32 paramlist = 5;
}

message GCGLogBodyDuelEnd {
    uint32 type = 1;
    uint32 level_id = 2;
    uint32 total_use_time = 3;
    repeated GCGUseTime use_time_list = 4;
    uint32 winner = 5;
    uint32 reason = 6;
    repeated GCGControllerInfo controller_info_list = 7;
    repeated GCGControllerDeckInfo controller_deck_info_list = 8;
    repeated GCGControllerCharactersInfo controller_character_info_map = 9;
    repeated GCGOperationData operation_data_list = 10;
}

message GCGLogBodyDuelReplay {
    string replay_json_str = 1;
}

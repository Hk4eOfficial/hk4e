syntax = "proto3";

package proto;

import "define.proto";

option go_package = "./;proto";

message HuntingPair {
    uint32 refresh_id = 9;
    uint32 monster_config_id = 4;
}

message TakeHuntingOfferReq {
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4326;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }

    HuntingPair hunting_pair = 14;
    uint32 city_id = 4;
}

message TakeHuntingOfferRsp {
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4318;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }

    HuntingPair hunting_pair = 13;
    uint32 city_id = 14;
    int32 retcode = 3;
}

message HuntingOfferData {
    HuntingPair hunting_pair = 4;
    uint32 city_id = 8;
    HuntingOfferState state = 1;
}

message GetCityHuntingOfferReq {
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4325;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }

    uint32 city_id = 9;
}

message GetCityHuntingOfferRsp {
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4307;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }

    int32 retcode = 9;
    repeated HuntingOfferData hunting_offer_list = 13;
    uint32 city_id = 2;
    HuntingPair ongoing_hunting_pair = 8;
    uint32 cur_week_finished_count = 1;
    uint32 next_refresh_time = 4;
}

message GetHuntingOfferRewardReq {
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4302;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }

    uint32 city_id = 6;
    HuntingPair hunting_pair = 4;
}

message GetHuntingOfferRewardRsp {
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4331;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }

    HuntingPair hunting_pair = 14;
    uint32 city_id = 3;
    int32 retcode = 12;
}

message HuntingStartNotify {
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4329;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }

    Vector clue_position = 4;
    uint32 fail_time = 15;
    HuntingPair hunting_pair = 3;
    bool is_final = 8;
}

message HuntingRevealClueNotify {
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4322;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }

    uint32 finish_clue_count = 5;
    Vector clue_position = 4;
    HuntingPair hunting_pair = 12;
    uint32 finished_group_id = 7;
}

message HuntingRevealFinalNotify {
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4344;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }

    uint32 finished_group_id = 5;
    HuntingPair hunting_pair = 11;
    Vector final_position = 2;
}

message HuntingSuccessNotify {
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4349;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }

    HuntingPair hunting_pair = 4;
}

message HuntingFailNotify {
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4320;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }

    HuntingPair hunting_pair = 12;
}

message HuntingOngoingNotify {
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4345;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }

    HuntingPair hunting_pair = 15;
    bool is_started = 8;
    Vector next_position = 3;
    uint32 finish_clue_count = 10;
    bool is_final = 14;
    uint32 fail_time = 7;
}

message HuntingGiveUpReq {
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4341;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }

    HuntingPair hunting_pair = 1;
}

message HuntingGiveUpRsp {
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4342;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }

    int32 retcode = 3;
    HuntingPair hunting_pair = 4;
}

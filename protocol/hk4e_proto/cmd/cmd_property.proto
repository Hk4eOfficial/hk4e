syntax = "proto3";

package proto;

import "define.proto";

option go_package = "./;proto";

enum PropChangeReason {
    PROP_CHANGE_NONE = 0;
    PROP_CHANGE_STATUE_RECOVER = 1;
    PROP_CHANGE_ENERGY_BALL = 2;
    PROP_CHANGE_ABILITY = 3;
    PROP_CHANGE_LEVELUP = 4;
    PROP_CHANGE_ITEM = 5;
    PROP_CHANGE_AVATAR_CARD = 6;
    PROP_CHANGE_CITY_LEVELUP = 7;
    PROP_CHANGE_AVATAR_UPGRADE = 8;
    PROP_CHANGE_AVATAR_PROMOTE = 9;
    PROP_CHANGE_PLAYER_ADD_EXP = 10;
    PROP_CHANGE_FINISH_QUEST = 11;
    PROP_CHANGE_GM = 12;
    PROP_CHANGE_MANUAL_ADJUST_WORLD_LEVEL = 13;
}

enum ChangeEnergyReason {
    CHANGE_ENERGY_NONE = 0;
    CHANGE_ENERGY_SKILL_START = 1;
}

enum MarkNewType {
    MARK_NEW_TYPE_NONE = 0;
    MARK_NEW_TYPE_COMBINE = 1;
    MARK_NEW_TYPE_FORGE = 2;
}

message EntityPropNotify {
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1272;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }

    map<uint32, PropValue> prop_map = 1;
    uint32 entity_id = 14;
}

message LifeStateChangeNotify {
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1298;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }

    uint32 entity_id = 4;
    repeated ServerBuff server_buff_list = 6;
    string attack_tag = 7;
    uint32 move_reliable_seq = 15;
    PlayerDieType die_type = 14;
    uint32 life_state = 5;
    uint32 source_entity_id = 1;
}

message EntityFightPropNotify {
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1212;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }

    uint32 entity_id = 4;
    map<uint32, float> fight_prop_map = 8;
}

message EntityFightPropUpdateNotify {
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1235;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }

    map<uint32, float> fight_prop_map = 15;
    uint32 entity_id = 13;
}

message AvatarFightPropNotify {
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1207;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }

    map<uint32, float> fight_prop_map = 8;
    uint64 avatar_guid = 4;
}

message AvatarFightPropUpdateNotify {
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1221;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }

    map<uint32, float> fight_prop_map = 15;
    uint64 avatar_guid = 13;
}

message EntityFightPropChangeReasonNotify {
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1203;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }

    repeated uint32 param_list = 10;
    float prop_delta = 1;
    ChangHpReason change_hp_reason = 14;
    PropChangeReason reason = 6;
    uint32 entity_id = 5;
    ChangeEnergyReason change_energy_reson = 15;
    uint32 prop_type = 13;
}

message AvatarLifeStateChangeNotify {
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1290;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }

    uint32 life_state = 13;
    string attack_tag = 10;
    PlayerDieType die_type = 2;
    repeated ServerBuff server_buff_list = 12;
    uint32 move_reliable_seq = 5;
    uint32 source_entity_id = 3;
    uint64 avatar_guid = 11;
}

message AvatarPropChangeReasonNotify {
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1273;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }

    float old_value = 11;
    PropChangeReason reason = 5;
    uint32 prop_type = 1;
    uint64 avatar_guid = 8;
    float cur_value = 15;
}

message PlayerPropChangeReasonNotify {
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1299;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }

    uint32 prop_type = 6;
    float old_value = 12;
    PropChangeReason reason = 1;
    float cur_value = 11;
}

message AvatarPropNotify {
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1231;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }

    map<uint32, int64> prop_map = 14;
    uint64 avatar_guid = 15;
}

message MarkNewNotify {
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1275;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }

    repeated uint32 id_list = 7;
    uint32 mark_new_type = 11;
}
